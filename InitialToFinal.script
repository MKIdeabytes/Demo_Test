function ScreenPart Portion

	// Set up an easy-to-maintain property list that stores the necessary multipliers for the specified screen portion parameter value
	
	set screenPortions to {
		
		TopHalf: [[0,0],[1,.5]],
		TopHalf_withoutmenu: [[0,1],[1,.5]],
		
		BottomHalf: [[0,.5],[1,1]],
		
		LeftHalf: [[0,0],[.5,1]],
		
		RightHalf: [[.5,0],[1,1]],
		
		HorizontalMiddle: [[0,.25],[1,.75]],
		
		VerticalMiddle:[[.25,0],[.75,1]],
		
		TopLeftQuadrant:[[0,0],[.5,.5]],
		
		TopRightQuadrant:[[.5,0],[1,.5]],
		
		BottomLeftQuadrant:[[0,.5],[.5,1]],

		BottomLeftQuadrant_success_msg:[[0,.9],[.5,1]],
		
		BottomRightQuadrant:[[.5,.5],[1,1]],
		
		Center:[[.25,.25],[.75,.75]],

	}
	
	set multiplier to screenPortions.(Portion) // Retrieves the value for the key in the property list. The name of the key is passed as a parameter into the function.
	
	// Error handling is needed in the event that an unrecognized parameter is passed to the function
	
	if multiplier is empty then
		
		throw "Parameter error", Portion && "is not a recognized screen portion."
		
	end if
	
	return (the remoteScreenSize,the remotescreenSize) * multiplier
	
End ScreenPart

to handle LoginToApplication username,password
	try
		
		if ImageFound(text:"Switch user" ,waitfor:30)
			Click FoundImageLocation()
		end if
		InitialToFinalFetchingData
		CommonHandlers.enterUsingText "Log in",username,"54","63","VerticalMiddle"			
		//CommonHandlers.clickUsingText "Continue", "300","0","VerticalMiddle"
		CommonHandlers.clickUsingText "Continue", "","","VerticalMiddle"
		wait 3
		
		CommonHandlers.enterUsingText "Password",Password, "50", "0", "VerticalMiddle"
		Put "User Entered details in the Login screen" into global Vstep
		Log global Vstep
		CommonHandlers.CaptureAtLog
		
		CommonHandlers.clickUsingText "Log In", "", "", "VerticalMiddle"
		Wait 5
		
		if ImageFound(text:"View My Vaults",WaitFor:20,SearchRectangle:screenPart("TopHalf"))
			wait 2
			Click FoundImageLocation()
		end if
		wait 3
		if ImageFound(text:"Informal", waitFor:20)
			
			CommonHandlers.clickUsingText "Informal Testing", "", "", "TopRightQuadrant"
			Put "Informal Environment Opened" into global Vstep
			Log global Vstep
			
		end if
		if ImageFound(text:"QualityOne", waitFor:120,searchrectangle:ScreenPart("TopLeftQuadrant")) or if ImageFound(text:"Home", waitFor:120,searchrectangle:ScreenPart("TopLeftQuadrant"))
			Put "User Sign in Successfully to the application" into global Vstep
			Log global Vstep
			CommonHandlers.CaptureAtLog
		else
			Put "User Sign In Unsuccessfully" into global Vstep
			LogError global Vstep
			
			CommonHandlers.CaptureAtLog
		end if
		
		If imagefound(text:"Dismis",waitfor:7,SearchRectangle:ScreenPart("TopRightQuadrant"))
			Click foundimagelocation()
		end if
	Catch theException
		CommonHandlers.UserFriendlymessage theException
		CommonHandlers.CaptureAtLog
		
	End try
end LoginToApplication

//  Log in to RB_Veevavault_Application
to handle LoginToApplication_Originator
	LoginToApplication global Originator_Username,global Originator_Password
	
end  LoginToApplication_Originator

to handle LoginToApplication_Verifier
	LoginToApplication global Verifier_Username,global Verifier_Password
end LoginToApplication_Verifier

// connecting to SUT(windows machine with name)
to handle ConnectToSUT
	
	
	Connect global SUTName
	//Connect "SUT200"
	Show Remote
	
	wait 2
	
end ConnectToSUT

// Launch web app in chrome browser
to handle LaunchApplication
	//put "https://login.veevavault.com/" into global URL
	try
		if ImageFound(imageName:"LeaveButton", waitFor:3)
			Click FoundImageLocation()
		end if
		
		TypeText windowsKey,"r" 
		wait 3
		Typetext "Chrome"&&global URL&&"-Incognito", return
		(*if imagefound(image:"YesForChrome") then
			click FoundImageLocation()
		end if*)
		if imagefound(text:"Google Chrome",Searchrectangle:ScreenPart("Center")) then
			click text:"Yes",Searchrectangle:ScreenPart("BottomLeftQuadrant")
		end if
		
		
		if ImageFound(imageName:"windowMaximizeIcon", waitFor:2)
			click FoundImageLocation()
		end if
		(*if ImageFound(text:"Vault", waitFor:20)
			Put "Veeva Vault Welcome Log In Screen displayed" into global Vstep
		//	Log global Vstep
			
			CommonHandlers.CaptureAtLog
		else
			Put "Veeva Vault Welcome Log In Screen not displayed" into global Vstep
			LogError global Vstep
			
			CommonHandlers.CaptureAtLog
		end if*)
	Catch theException
		Logerror theException
		CommonHandlers.CaptureAtLog
		
	End try
	
end LaunchApplication


//Fetching Data for Complaint Action
to handle InitialToFinalFetchingData
	params TCname
	set myFile to ResourcePath("InitialToFinal_TestData_UAT.csv")
	//set myFileCopy to myFile
	
	repeat with MyLine = each line of line 2 to the last of file myFile
		if second item of MyLine is TCname
			set first item of MyLine to "Executed"
			log "entered"
			set line (the repeatIndex + 1) of file myFile to MyLine
			put item 2 of MyLine into global TCName
			
			//set first item of MyLine to "Done"
			
			set line (the repeatIndex + 1) of file myFile to MyLine
			
			put third item of MyLine into global SUTName
			put item 4 of MyLine into global URL
			put item 5 of MyLine into global Originator_Username
			put item 6 of MyLine into global Originator_Password
			put item 7 of MyLine into global varProcesses
			put item 8 of MyLine into global FilePath
			put item 9 of MyLine into global DocumentType
			put item 10 of MyLine into global Title			
			put item 11 of MyLine into global OwningDepartment			
			put item 12 of MyLine into global Location
			
			
			put item 13 of MyLine into global GivenDocumentID
			set the suitevariables.RecordId to global GivenDocumentID
			
			put item 14 of MyLine into global VerifierFirstName
			put item 15 of MyLine into global VerifierDateDue
			replace every occurrence of "_" in global VerifierDateDue with " "
			put item 16 of MyLine into global VerifierVerdict
			put item 17 of MyLine into global VerifierContext
			
			
			put item 18 of MyLine into global Verifier_Username
			put item 19 of MyLine into global Verifier_Password
			//put item 20 of MyLine into global VRecordId
			//replace every occurrence of "_" in global CMDateDue with " "
			put item 21 of MyLine into global NewCMADateDue
			replace every occurrence of "_" in global NewCMADateDue with " "
			
			put item 22 of MyLine into global NewAOUsername
			
			put item 23 of MyLine into global ConfirmOutComeOfCMVerdict
			put item 24 of MyLine into global NewAOFirstName
			put item 25 of MyLine into global AOFirstName
			
			//
			Exit repeat
		end if
	end repeat
	
end InitialToFinalFetchingData

to handle Upload_Document
	try
		CommonHandlers.clickUsingText "Library", "", "", "TopLeftQuadrant"
		//Click text:"Library", waitFor:10,SearchRectangle:ScreenPart("TopLeftQuadrant")
		(*put "test123" into global  CCshortDescription
		put "20 Apr 2021" into global CCDateDue
		put "Health" into global CCGBU
		put "Artwork"into global CCChangeType
		put "Health" into global CCReasonDrivers
		put "Country" into global  CCImpactedLocation*)
		wait 4
		CommonHandlers.clickUsingText "Create", "", "", "TopRightQuadrant"
		//Click text:"Create",waitfor:120,searchrectangle:ScreenPart("TopRightQuadrant")
		wait 1
		if imagefound(text:"Create Document",searchrectangle:ScreenPart("center"))
			log "Able to upload document"
		end if
		CommonHandlers.clickUsingText "Upload", "", "", "center"
		CommonHandlers.clickUsingText "Continue", "", "", "center"
		waitfor 120,text:"Upload Files",searchrectangle:ScreenPart("TopLeftQuadrant")
		Put "Upload Document Icon and choose document type option displayed" into global Vstep
		Log global Vstep
		CommonHandlers.CaptureAtLog
		
		CommonHandlers.clickUsingImage "UploadIcon", "TopLeftQuadrant"
		//click Image:"UploadIcon",waitfor:120,searchrectangle:ScreenPart("TopLeftQuadrant")
		WaitFor 120, text:"File name"
		CommonHandlers.enterUsingText "File name",global FilePath,"200","0","TopLeftQuadrant"
		wait 1
		CommonHandlers.clickUsingText "Open", "", "", "center"
		//Click text:"Open", waitFor:120,searchrectangle:ScreenPart("Center")
		//WaitFor 100, text:"Download",searchrectangle:ScreenPart("Center")
		if ImageFound(text:"to be uploaded",waitfor:20,searchrectangle:ScreenPart("TopRightQuadrant"))
			
			put "UploadAttachmentSuccessfully" into global Vstep
			Log global Vstep
			CommonHandlers.CaptureAtLog
			
		else
			put "UploadAttachmentUnSuccessfully" into global Vstep
			LogError global Vstep
			CommonHandlers.CaptureAtLog
			
		end if
		
		CommonHandlers.selectDropdown  "Choose document type",global DocumentType, "0","20","LeftHalf"
		CommonHandlers.clickUsingText "Next", "", "", "center"
		if ImageFound(text:"Title",waitfor:20,searchrectangle:ScreenPart("TopRightQuadrant"))
			
			put "File has been successfully uploaded" into global Vstep
			Log global Vstep
		end if
		
		CommonHandlers.enterUsingText "Title",global Title,"80","6","RightHalf"
		//CommonHandlers.clickUsingText "Title","0","20","RightHalf"
		//CommonHandlers.clickUsingText "Owning Department", "120","3","RightHalf"
		CommonHandlers.selectDropdown "Owning Department",global OwningDepartment,"180","10","RightHalf"
		
		CommonHandlers.selectDropdown "Location(s)", global Location,"180","10","RightHalf"
		CommonHandlers.clickUsingText "Save", "", "", "TopRightQuadrant"
		
		if ImageFound(text:"Initial",waitfor:20,searchrectangle:ScreenPart("TopLeftQuadrant"))
			
			put "File has been Created successfully" into global Vstep
			Log global Vstep
			//CommonHandlers.clickUsingText "Document Number", "", "", "TopRightQuadrant"
			CommonHandlers.readTextUsingText "Document Number", "120", "0", "200", "10", "TopRightQuadrant" 
			
			put global currLocVal into the suitevariables.RecordId
			log the suitevariables.RecordId
			Put the suitevariables.RecordId into global VRecordId
			log global VRecordId
			If global GivenDocumentID is ""
				log "test"
				set the suitevariables.RecordId to global VRecordId
			else
				log "else test"
				set the suitevariables.RecordId to global GivenDocumentID
			end if
			Put "Document Record created Successfully With RecordID"&the suitevariables.RecordId into global Vstep
			Log global Vstep
			CommonHandlers.CaptureAtLog
			//return global RecordID
			
		else
			put "File has not been Created successfully" into global Vstep
			Log global Vstep
			
		end if
		
		
	Catch theException
		CommonHandlers.UserFriendlymessage theException
		CommonHandlers.CaptureAtLog
		
	End try
	
	
end Upload_Document

to handle VerifyLifeCycleState State
	try
		log x
		if ImageFound(text:State,searchrectangle:[the RemoteScreenSize*[0.1,0.15],the RemoteScreenSize*[0.45,0.25]], EnhanceLocalContrast:"Yes") or if ImageFound(text:State,searchrectangle:[the RemoteScreenSize*[0.12,0.12],the RemoteScreenSize*[0.4,0.25]]) or if ImageFound(text:State)
			Put "The Lifecycle state in "&State into global Vstep
			Log global Vstep
			CommonHandlers.CaptureAtLog
			
		else
			Put "The LifeCycleState not in "&State into global Vstep
			LogError global Vstep
			CommonHandlers.CaptureAtLog
			
		end if
	Catch theException
		CommonHandlers.UserFriendlymessage theException
		CommonHandlers.CaptureAtLog
	end try
end VerifyLifeCycleState

to handle VerifyLifeCycleState_Initial

	VerifyLifeCycleState "Initial"
end VerifyLifeCycleState_Initial

to handle VerifyLifeCycleState_Final

	VerifyLifeCycleState "Final"
end VerifyLifeCycleState_Final
to handle VerifyLifeCycleState_InDocumetVerification

	VerifyLifeCycleState "In Document Verification"
end VerifyLifeCycleState_InDocumetVerification

to handle MakeFinal
	try
		CommonHandlers.clickUsingImage "WorkflowActions","TopRightQuadrant"
		CommonHandlers.clickUsingText "Make Final","","","TopRightQuadrant"
		if ImageFound(text:"Start Document Workflow",waitfor:20,searchrectangle:ScreenPart("Center"))
			
			put "Start Document Workflow popup displayed successfully" into global Vstep
			Log global Vstep
			
		else
			put "Start Document Workflow popup displayed successfully" into global Vstep
			Log global Vstep
			
		end if
		
		CommonHandlers.clickUsingText "Cancel","54","0","Center"
		if ImageFound(text:"Final",waitfor:20,searchrectangle:ScreenPart("TopLeftQuadrant"))
			
			put "Make Final Task completed successfully" into global Vstep
			Log global Vstep
		else
			put "Make Final Task not completed successfully"
		end if
	Catch theException
		CommonHandlers.UserFriendlymessage theException
		CommonHandlers.CaptureAtLog
	end try
	
end MakeFinal

to handle Send_For_Document_Verification
	try
		CommonHandlers.clickUsingImage "WorkflowActions","TopRightQuadrant"
		CommonHandlers.clickUsingText "Send for Document Verification","","","TopRightQuadrant"
		if ImageFound(text:"Start Document Workflow",waitfor:20,searchrectangle:ScreenPart("Center"))
			
			put "Start Document Workflow popup displayed successfully" into global Vstep
			Log global Vstep
			
		else
			put "Start Document Workflow popup displayed successfully" into global Vstep
			Log global Vstep
			
		end if
		wait 3
		CommonHandlers.selectDropdown "Verifier", global VerifierFirstName, "0", "20", "Center"
		wait 2
		CommonHandlers.enterUsingText "Due Date", global VerifierDateDue, "0", "20", "Center"
		CommonHandlers.clickUsingText "Cancel","54","0","Center"
		if ImageFound(text:"In Document Verification",waitfor:20,searchrectangle:ScreenPart("TopLeftQuadrant"))
			
			put "Send for Document verification task completed successfully" into global Vstep
			Log global Vstep
		else
			put "Send for Document verification task not completed successfully"
		end if
	Catch theException
		CommonHandlers.UserFriendlymessage theException
		CommonHandlers.CaptureAtLog
	end try
	
end Send_For_Document_Verification

// Logout from application
to handle LogOut
	try
		wait 3
		CommonHandlers.clickUsingImage "UserProfileIcon","TopRightQuadrant"
		//Click [1870,100]
		
		wait 2
		CommonHandlers.clickUsingText "Log out", "", "", "TopRightQuadrant"
		//Click text:"Log out", waitFor:40,SearchRectangle:ScreenPart("TopRightQuadrant"),validpattern:"Log out"
		if ImageFound(text:"Having trouble logging in", waitFor:40,searchrectangle:ScreenPart("VerticalMiddle")) or if ImageFound(text:"Switch", waitFor:20,searchrectangle:ScreenPart("VerticalMiddle"))
			Put "User Sign out successfully" into  global Vstep
			Log  global Vstep
			CommonHandlers.CaptureAtLog
		else
			Put "User is not Sign out successfully" into  global Vstep
			Logerror  global Vstep
			CommonHandlers.CaptureAtLog
		end if
	Catch theException
		Logerror theException
		CommonHandlers.CaptureAtLog
		
	End try
end LogOut

to handle Verification_Task_Approve
	try
		CommonHandlers.clickUsingText "Complete","", "", "TopRightQuadrant"
		if ImageFound(text:"Verification Task", waitFor:40,searchrectangle:ScreenPart("Center"))
			Put "Verification task popup displayed successfully" into  global Vstep
			Log  global Vstep
			CommonHandlers.CaptureAtLog
		end if
		
		CommonHandlers.clickUsingText global VerifierVerdict, "", "", "Center"
		CommonHandlers.selectDropdown "Context",global VerifierContext, "10","28","Center"
		CommonHandlers.clickUsingImage "CompleteButton", "", "", "Center"
		wait 3
		if ImageFound(text:"Final", waitFor:40,searchrectangle:ScreenPart("TopLeftQuadrant"))
			Put "Verifier Approve the Document successfully" into  global Vstep
			Log  global Vstep
			CommonHandlers.CaptureAtLog
		else
			Put "Verifier Not Approve the Document successfully" into  global Vstep
			Log  global Vstep
			CommonHandlers.CaptureAtLog
		end if
	Catch theException
		Logerror theException
		CommonHandlers.CaptureAtLog
		
	End try
end Verification_Task_Approve

to handle Verification_Task_Reject
	try
		CommonHandlers.clickUsingText "Complete","", "", "TopRightQuadrant"
		if ImageFound(text:"Verification Task", waitFor:40,searchrectangle:ScreenPart("Center"))
			Put "Verification task popup displayed successfully" into  global Vstep
			Log  global Vstep
			CommonHandlers.CaptureAtLog
		end if
		InitialToFinalFetchingData
		CommonHandlers.clickUsingText global VerifierVerdict, "", "", "Center"
		//CommonHandlers.selectDropdown "Context",global VerifierContext, "10","28","Center"
		CommonHandlers.enterUsingText "Rejection Justification","Testing", "20", "20", "Center"
		CommonHandlers.clickUsingImage "CompleteButton", "", "", "Center"
		wait 3
		if ImageFound(text:"Initial", waitFor:40,searchrectangle:ScreenPart("TopLeftQuadrant"))
			Put "Verifier Reject the Document successfully" into  global Vstep
			Log  global Vstep
			CommonHandlers.CaptureAtLog
		else
			Put "Verifier Not Reject the Document successfully" into  global Vstep
			Log  global Vstep
			CommonHandlers.CaptureAtLog
		end if
	Catch theException
		Logerror theException
		CommonHandlers.CaptureAtLog
		
	End try
	
	
	
end Verification_Task_Reject

to handle SearchRecord
	try
		//InitialToFinal.InitialToFinalFetchingData
		wait 2
		//	Put "Deviation" into global RecordType
		CommonHandlers.clickUsingText "Library", "", "", "TopLeftQuadrant"
		
		//Click text:"QMS Processes", waitFor:120,SearchRectangle:ScreenPart("TopLeftQuadrant")
		
		
		
		CommonHandlers.clickUsingText "All Library", "", "", "TopLeftQuadrant"
		
		wait 2
		log the suitevariables.RecordId
		CommonHandlers.enterUsingImage "SearchboxNew", the suitevariables.RecordId ,"", "", "TopHalf"
		
		wait 2
		
		Set the searchrectangle to ScreenPart("TopLeftQuadrant")
		wait 2
		WaitFor 10, text:"relevance"
		
		
		if imagefound(text: the suitevariables.RecordId, waitFor:10,SearchRectangle:[bottomLeft of imagerectangle(text:"relevance"),ImageLocation(text:"relevance")+[154,76]])
			
			(*put "Corresponding "&global RecordType&" should be filtered" into global Vstep
			Log global Vstep
			CaptureAtLog*)
			
			Click FoundImageLocation()
			
			put "Corresponding Documnet Record should be filtered" into global Vstep
			Log global Vstep
			CommonHandlers.CaptureAtLog
			
		end if
		
		if ImageFound(text:"General", waitFor:120, SearchRectangle:ScreenPart("TopRightQuadrant"))
			Put"Corresponding Document Record General Information page should be displayed" into global Vstep
			Log global Vstep
			CommonHandlers.CaptureAtLog
		else
			Put"Corresponding Document Record General Information page not displayed" into global Vstep
			LogError global Vstep
			CommonHandlers.CaptureAtLog
		end if
		Set the searchrectangle to []
	Catch theException
		Logerror theException
		CommonHandlers.CaptureAtLog
		
	End try
	
end SearchRecord

to handle LaunchAndLoginToApplication_Originator
	params TCname
	Set the ScriptLogging to Off
	InitialToFinal.PreExecution_ForModels "InitialToFinal_TestData_UAT.csv"
	InitialToFinal.InitialToFinalFetchingData TCname
	InitialToFinal.ConnectToSUT
	InitialToFinal.LaunchApplication
	InitialToFinal. LoginToApplication_Originator
end LaunchAndLoginToApplication_Originator


to handle PreExecution_ForModels DataFileName
	set myFile to ResourcePath(DataFileName)
	Put 0 into mcount
	repeat with MyLine = each line of line 2 to the last of file myFile
		(*log DataFileName*)
		if first item of MyLine is "Yes" 
			put mcount+1 into mcount
			Put mcount into VTestCaseCountForExecution
			//put repeatindex() into VTestCaseCountForExecution
			
			
			set the suitevariables.TestCaseCountForExecution to VTestCaseCountForExecution
		end if
	end repeat
	// write the below code in the PreExecutionScript End
	
	
	//for screenshots
	
	
	
	put the suiteinfo.path&"/AllScreenshots" into screenshotsFolder
	put the date&the time into currentExecutionTime
	delete every occurrence of "/" from currentExecutionTime
	delete every occurrence of ":" from currentExecutionTime
	delete every occurrence of " " from currentExecutionTime
	//put  screenshotsFolder&"/"&currentExecutionTime into global currentScreenshotsFolder
	
	
	set the suitevariables.currentScreenshotsFolder to screenshotsFolder&"/"&currentExecutionTime
	//log the suitevariables.currentScreenshotsFolder
	if folder screenshotsFolder exists then
		
	else
		create new folder screenshotsFolder
	end if
	
	if folder the suitevariables.currentScreenshotsFolder exists then
		
	else
		create new folder the suitevariables.currentScreenshotsFolder
	end if
	put 1 into global screenshotNum
	put 1 into the suitevariables.screenshotNum
	
end PreExecution_ForModels

to handle Verification
 //need to implement
end Verification
